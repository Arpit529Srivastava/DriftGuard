name: Issue Management

on:
  issues:
    types: [opened, edited, reopened, labeled, unlabeled]

permissions:
  issues: write
  contents: read

jobs:
  # Issue triage automation
  issue-triage:
    name: Issue Triage
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Welcome new contributors
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const isFirstTimeContributor = issue.author_association === 'FIRST_TIME_CONTRIBUTOR';
            
            if (isFirstTimeContributor) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `ðŸŽ‰ Welcome to DriftGuard! Thank you for your first contribution!\n\nWe're excited to have you here. Our team will review your issue and get back to you soon. In the meantime, feel free to check out our [Contributing Guidelines](CONTRIBUTING.md) and [README](README.md) to learn more about the project.\n\nIf you have any questions, don't hesitate to ask!`
              });
            }

  # Issue stale management
  issue-stale:
    name: Issue Stale Management
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'edited'
    steps:
      - name: Check for stale issues
        uses: actions/github-script@v7
        with:
          script: |
            // This would typically be handled by GitHub's built-in stale issue management
            // For now, we'll just log that this check ran
            console.log('Stale issue management check completed'); 